{"version":3,"sources":["config/settings.ts","model/attendee.ts","model/message.ts","model/conversation.ts","model/user.ts","events/connectionStateChanged.ts","events/conversationJoined.ts","events/conversationSelected.ts","events/messageReceived.ts","events/userConnected.ts","events/userDisconnected.ts","services/chat.service.ts","app.ts","environment.ts","main.ts","resources/index.ts","resources/elements/contact.ts","resources/elements/contacts.ts","resources/elements/conversation.ts","resources/elements/conversationpreview.ts","resources/elements/conversations.ts","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/app.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/contact.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/contacts.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversation.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversationpreview.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversations.html"],"names":[],"mappings":";;IAAA;QAAA;YACI,UAAK,GAAG,IAAI,CAAC;YACb,aAAQ,GAAG,MAAM,CAAC;YAClB,YAAO,GAAG,iCAAiC,CAAC;YAC5C,YAAO,GAAG,qCAAqC,CAAC;YAChD,YAAO,GAAG,gCAAgC,CAAC;QAC/C,CAAC;QAAD,eAAC;IAAD,CANA,AAMC,IAAA;IANY,gBAAQ,WAMpB,CAAA;;;;;ICND;QAAA;QAGA,CAAC;QAAD,eAAC;IAAD,CAHA,AAGC,IAAA;IAHY,gBAAQ,WAGpB,CAAA;;;;;ICHD;QAAA;QAKA,CAAC;QAAD,cAAC;IAAD,CALA,AAKC,IAAA;IALY,eAAO,UAKnB,CAAA;;;;;ICFD;QAAA;QAKA,CAAC;QAAD,mBAAC;IAAD,CALA,AAKC,IAAA;IALY,oBAAY,eAKxB,CAAA;;;;;ICND;QAAA;QAIA,CAAC;QAAD,WAAC;IAAD,CAJA,AAIC,IAAA;IAJY,YAAI,OAIhB,CAAA;;;;;ICJD;QACI,gCAAY,KAAsB;QAAI,CAAC;QAC3C,6BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,8BAAsB,yBAElC,CAAA;;;;;ICFD;QACI,4BAAY,YAA0B;QAAI,CAAC;QAC/C,yBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0BAAkB,qBAE9B,CAAA;;;;;ICFD;QACI,8BAAY,YAA0B;QAAI,CAAC;QAC/C,2BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,4BAAoB,uBAEhC,CAAA;;;;;ICFD;QACI,yBAAY,OAAgB;QAAI,CAAC;QACrC,sBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,uBAAe,kBAE3B,CAAA;;;;;ICFD;QACI,uBAAY,IAAU;QAAI,CAAC;QAC/B,oBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,qBAAa,gBAEzB,CAAA;;;;;ICJD;QACI,0BAAY,EAAU;QAAI,CAAC;QAC/B,uBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,wBAAgB,mBAE5B,CAAA;;;;;;;;;;;;;;IC8BD,WAAY,eAAe;QACvB,+DAAa,CAAA;QACb,qEAAgB,CAAA;QAChB,uDAAS,CAAA;IACb,CAAC,EAJW,uBAAe,KAAf,uBAAe,QAI1B;IAJD,IAAY,eAAe,GAAf,uBAIX,CAAA;IAGD;QAII,qBAAoB,QAAkB,EAAU,EAAmB,EAAU,IAAgB;YAAzE,aAAQ,GAAR,QAAQ,CAAU;YAAU,OAAE,GAAF,EAAE,CAAiB;YAAU,SAAI,GAAJ,IAAI,CAAY;YAF7F,iBAAY,GAAG,eAAe,CAAC,YAAY,CAAC;QAEsD,CAAC;QAEnG,2BAAK,GAAL;YAAA,iBA4DC;YA3DG,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAEhC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;YAEtC,IAAI,UAAU,GAAgB,MAAM,CAAC,UAAU,CAAC;YAChD,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC;YAM9B,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA1B,CAA0B,CAAC;YAKlE,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,UAAA,EAAE,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAA3B,CAA2B,CAAC;YAMpE,OAAO,CAAC,MAAM,CAAC,eAAe,GAAG,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAA/B,CAA+B,CAAC;YAK5E,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAArC,CAAqC,CAAC;YAExF,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAER,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,UAAA,MAAM;oBACrC,IAAI,QAAgB,EAChB,QAAgB,CAAC;oBAErB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC/C,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC5D,QAAQ,GAAG,KAAK,CAAC;wBACrB,CAAC;wBACD,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC5D,QAAQ,GAAG,KAAK,CAAC;wBACrB,CAAC;oBACL,CAAC;oBAED,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC;gBAC/E,CAAC,CAAC,CAAC;YACP,CAAC;YAGD,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC;YAE9D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAE,CAAC;YAE3D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;YAGhE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE;iBACxB,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,EAAlD,CAAkD,CAAC;iBACpE,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,EAA9C,CAA8C,CAAC,CAAC;QACvE,CAAC;QAED,sCAAgB,GAAhB,UAAiB,YAA0B;YACvC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,CAAC;QAED,iCAAW,GAAX,UAAY,YAA0B,EAAE,OAAe;YAAvD,iBAsCC;YArCG,IAAI,CAAC,GAAG,IAAI,iBAAO,EAAE,CAAC;YACtB,CAAC,CAAC,cAAc,GAAG,YAAY,CAAC,EAAE,CAAC;YACnC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;YAEjB,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACxC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,YAAY,CAAC,EAAE;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,EAAV,CAAU,CAAC;yBAC5B,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,UAAkB,CAAC;gBACtB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;oBAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACtC,UAAQ,GAAG,CAAC,CAAC;oBACjB,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACzC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,UAAQ,CAAC,MAAM;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACD,IAAI,CACD,UAAA,QAAQ;wBACJ,YAAY,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;wBACnC,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtD,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC;yBACL,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YAEP,CAAC;QACL,CAAC;QAED,8BAAQ,GAAR;YAAA,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACN,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC5B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrB,OAAO,CAAC,IAAI,CAAC,KAAe,CAAC,CAAC;oBAClC,CAAC;gBACL,CAAC,CAAC;qBACL,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,sCAAgB,GAAhB;YAAA,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAE,MAAM;gBAC/C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACV,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACP,OAAO,CAAC,IAAsB,CAAC,CAAC;oBACpC,CAAC;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,eAAgC;YACvD,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,eAAe,CAAC,CAAC;YAC/D,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,+CAAsB,CAAC,eAAe,CAAC,CAAC,CAAC;QACjE,CAAC;QAEO,mCAAa,GAArB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACvD,CAAC;QAEO,oCAAc,GAAtB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC1D,CAAC;QAEO,6BAAO,GAAf,UAAgB,KAAU;YACtB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC;QAEO,qCAAe,GAAvB,UAAwB,IAAU;YAC9B,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,EAAU;YACjC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,EAAE,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,mCAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,OAAgB;YACtC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,iCAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,YAA0B;YACjD,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,CAAC;QA/KL;YAAC,8BAAU;;uBAAA;QAgLX,kBAAC;IAAD,CA/KA,AA+KC,IAAA;IA/KY,mBAAW,cA+KvB,CAAA;;;;;;;;;;;;;;ICjND;QAGE,aAAoB,OAAoB;YAApB,YAAO,GAAP,OAAO,CAAa;YAFxC,YAAO,GAAG,cAAc,CAAC;YAGvB,OAAO,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC;QANH;YAAC,8BAAU;;eAAA;QAQX,UAAC;IAAD,CAPA,AAOC,IAAA;IAPY,WAAG,MAOf,CAAA;;;;;ICZD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;;;;;;;;;;ICFD;QAAA;QAMA,CAAC;QAHC,8BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;8CAAA;QAKX,cAAC;IAAD,CANA,AAMC,IAAA;IANY,eAAO,UAMnB,CAAA;;;;;;;;;;;;;;ICND;QAAA;QAMA,CAAC;QAHC,+BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;+CAAA;QAKX,eAAC;IAAD,CANA,AAMC,IAAA;IANY,gBAAQ,WAMpB,CAAA;;;;;;;;;;;;;;ICND;QAAA;QAMA,CAAC;QAHC,mCAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;mDAAA;QAKX,mBAAC;IAAD,CANA,AAMC,IAAA;IANY,oBAAY,eAMxB,CAAA;;;;;;;;;;;;;;ICND;QAAA;QAMA,CAAC;QAHC,0CAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;0DAAA;QAKX,0BAAC;IAAD,CANA,AAMC,IAAA;IANY,2BAAmB,sBAM/B,CAAA;;;;;;;;;;;;;;ICND;QAAA;QAMA,CAAC;QAHC,oCAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;oDAAA;QAKX,oBAAC;IAAD,CANA,AAMC,IAAA;IANY,qBAAa,gBAMzB,CAAA;;;ACRD;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class Settings {\n    debug = true;\n    userName = 'test';\n    userAPI = 'http://localhost:5000/api/users';\n    convAPI = 'http://localhost:5000/api/chat/conv';\n    chatAPI = 'http://localhost:5000/api/chat';\n}","export class Attendee {\n    userId: string;\n    name: string;\n}","export class Message {\n    conversationId: string;\n    from: string;\n    text: string;\n    date: Date;\n}","import { Attendee } from './attendee';\nimport { Message } from './message';\n\nexport class Conversation {\n    id: string;\n    title: string;\n    attendees: Attendee[];\n    messages: Message[]\n}","import { Conversation } from './conversation';\n\nexport class User {\n    id: string;\n    name: string;\n    conversation: Conversation;\n}","import { ConnectionState } from '../services/chat.service';\n\nexport class ConnectionStateChanged {\n    constructor(state: ConnectionState) { }\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationJoined {\n    constructor(conversation: Conversation) { }\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationSelected {\n    constructor(conversation: Conversation) { }\n}","import { Message } from '../model/message';\n\nexport class MessageReceived {\n    constructor(message: Message) { }\n}","import { User } from '../model/user';\n\nexport class UserConnected {\n    constructor(user: User) { }\n}","export class UserDisconnected {\n    constructor(id: string) { }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport {autoinject} from 'aurelia-framework';\n\nimport { Settings } from '../config/settings';\nimport { User } from '../model/user';\nimport { Message } from '../model/message';\nimport { Conversation } from '../model/conversation';\nimport { Attendee } from '../model/attendee';\n\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\nimport { ConversationJoined } from '../events/conversationJoined';\nimport { ConversationSelected } from '../events/conversationSelected';\nimport { MessageReceived } from '../events/messageReceived';\nimport { UserConnected } from '../events/userConnected';\nimport { UserDisconnected } from '../events/userDisconnected';\n\ninterface ChatSignalR extends SignalR {\n    chat: ChatProxy\n}\n\ninterface ChatProxy {\n    client: ChatClient\n}\n\ninterface ChatClient {\n    userConnected: (user: User) => void;\n    userDisconnected: (id: string) => void;\n    messageReceived: (message: Message) => void;\n    joinConversation: (conversation: Conversation) => void;\n}\n\nexport enum ConnectionState {  \n    Connected = 1,\n    Disconnected = 2,\n    Error = 3\n}\n\n@autoinject\nexport class ChatService {\n\n    currentState = ConnectionState.Disconnected;\n\n    constructor(private settings: Settings, private ea: EventAggregator, private http: HttpClient) {  }\n    \n    start() {\n        let debug = this.settings.debug;\n        // only for debug\n        jQuery.connection.hub.logging = debug;\n        // get the signalR hub named 'chat'\n        let connection = <ChatSignalR>jQuery.connection;\n        let chatHub = connection.chat;\n        \n        /**\n          * @desc callback when a new user connect to the chat\n          * @param User user, the connected user\n        */\n        chatHub.client.userConnected = user => this.onUserConnected(user);\n        /**\n          * @desc callback when a new user disconnect the chat\n          * @param id, the disconnected user id\n        */\n        chatHub.client.userDisconnected = id => this.onUserDisconnected(id);\n        /**\n          * @desc callback when a message is received\n          * @param String to, the conversation id\n          * @param Message data, the message\n        */\n        chatHub.client.messageReceived = message => this.onMessageReceived(message);\n        /**\n          * @desc callback when a new conversation is create on server\n          * @param Conv data, the conversation model\n        */\n        chatHub.client.joinConversation = conversation => this.onJoinConversation(conversation);\n\n        if (debug) {\n            // for debug only, callback on connection state change\n            jQuery.connection.hub.stateChanged(change => {\n                let oldState: string,\n                    newState: string;\n\n                for (var state in jQuery.signalR.connectionState) {\n                    if (jQuery.signalR.connectionState[state] === change.oldState) {\n                        oldState = state;\n                    }\n                    if (jQuery.signalR.connectionState[state] === change.newState) {\n                        newState = state;\n                    }\n                }\n\n                console.log(\"Chat Hub state changed from \" + oldState + \" to \" + newState);\n            });                        \n        }\n\n        // callback on connection reconnect\n        jQuery.connection.hub.reconnected(() => this.onReconnected());\n        // callback on connection error\n        jQuery.connection.hub.error(error => this.onError(error) );\n        // callback on connection disconnect\n        jQuery.connection.hub.disconnected(() => this.onDisconnected());\n    \n        // start the connection\n        jQuery.connection.hub.start()\n            .done(response => this.setConnectionState(ConnectionState.Connected))\n            .fail(error => this.setConnectionState(ConnectionState.Error));\n    }\n\n    showConversation(conversation: Conversation) {\n        this.ea.publish(new ConversationJoined(conversation));        \n    }\n\n    sendMessage(conversation: Conversation, message: string): Promise<Message> {\n        let m = new Message();\n        m.conversationId = conversation.id;\n        m.from = this.settings.userName;\n        m.text = message;\n\n        if (conversation.id) {\n            return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.chatAPI, {\n                    to: conversation.id,\n                    text: message\n                })\n                .then(response => resolve(m))\n                .catch(error => reject(error));\n            });\n        } else {\n            let attendee: Attendee;\n             conversation.attendees.forEach(a => {\n                 if (a.userId !== this.settings.userName) {\n                     attendee = a;\n                 }\n             });\n\n             return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.convAPI, {\n                    to: attendee.userId,\n                    text: message\n                })\n                .then(\n                    response => {\n                        conversation.id = response.content;\n                        this.ea.publish(new ConversationJoined(conversation));\n                        resolve(m);\n                    })\n                .catch(error => reject(error));\n            });\n            \n        }\n    }\n    \n    getUsers(): Promise<User[]> {\n        return new Promise<User[]>((resolve, reject) => {\n            this.http.get(this.settings.userAPI)\n                .then(response => {\n                        var data = response.content;\n                        if (data && data.users) {\n                            resolve(data.users as User[]);\n                        }\n                    })\n                .catch(error => reject(error));\n        });\n    }\n\n    getConversations(): Promise<Conversation[]> {\n        return new Promise<Conversation[]>((resolve, reject) => {\n            this.http.get(this.settings.chatAPI)\n                .then(response => {\n                    var data = response.content;\n                    if (data) {\n                        resolve(data as Conversation[]);\n                    }\n                })\n                .catch(error => reject(error));\n        });\n    }\n\n    private setConnectionState(connectionState: ConnectionState) {\n        console.log('connection state changed to: ' + connectionState);\n        this.currentState = connectionState;\n        this.ea.publish(new ConnectionStateChanged(connectionState));\n    }\n       \n    private onReconnected() {\n        this.setConnectionState(ConnectionState.Connected);\n    }\n\n    private onDisconnected() {\n        this.setConnectionState(ConnectionState.Disconnected);\n    }\n\n    private onError(error: any) {\n        this.setConnectionState(ConnectionState.Error);\n    }\n\n    private onUserConnected(user: User) {\n        console.log(\"Chat Hub new user connected: \" + user.id);\n        this.ea.publish(new UserConnected(user));\n    }\n\n    private onUserDisconnected(id: string) {\n        console.log(\"Chat Hub user disconnected: \" + id);\n        if (id !== this.settings.userName) {\n            this.ea.publish(new UserDisconnected(id));\n        }\n    }   \n\n    private onMessageReceived(message: Message) {\n        this.ea.publish(new MessageReceived(message));\n    }\n\n    private onJoinConversation(conversation: Conversation) {\n        this.ea.publish(new ConversationJoined(conversation));\n    }\n}","import {autoinject} from 'aurelia-framework';\n\nimport { ChatService } from './services/chat.service';\n\n@autoinject\nexport class App {\n  message = 'Hello World!';\n\n  constructor(private service: ChatService) { \n    service.start();\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class Contact {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class Contacts {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class Conversation {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class ConversationPreview {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class Conversations {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n",null,null,null,null,null,null],"sourceRoot":"../src"}