{"version":3,"sources":["config/settings.ts","app.ts","environment.ts","main.ts","model/attendee.ts","model/message.ts","model/conversation.ts","model/user.ts","events/conversationJoined.ts","events/conversationSelected.ts","events/messageReceived.ts","events/userConnected.ts","events/userDisconnected.ts","services/chat.service.ts","events/connectionStateChanged.ts","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/pages/account.js","pages/home.ts","pages/login.ts","resources/index.ts","resources/elements/contact-list.ts","resources/elements/contact.ts","resources/elements/conversation-list.ts","resources/elements/conversation-preview.ts","resources/elements/conversation.ts","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/app.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/pages/account.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/pages/home.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/pages/login.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/contact-list.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/contact.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversation-list.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversation-preview.html","/Users/olivierlefebvre/Documents/chatle/src/chatle.aurelia/src/resources/elements/conversation.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class Settings {\n    userName: string;\n    apiBaseUrl = 'http://localhost:5000';\n    userAPI = '/api/users';\n    convAPI = '/api/chat/conv';\n    chatAPI = '/api/chat';\n    loginAPI = \"/account/spaguess\"\n}","import { autoinject } from 'aurelia-framework';\nimport { Router, Redirect, NavigationInstruction, RouterConfiguration, Next, RouteConfig } from 'aurelia-router';\n\nimport { Settings } from './config/settings';\n\ninterface CustomRouteConfig extends RouteConfig {\n  anomymous: boolean;\n}\n\n@autoinject\nexport class App {\n  router: Router;\n\n  constructor(private settings: Settings) { \n    this.loadUser();\n  }\n\n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = 'Chatle';\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      { route: ['', 'home'], name: 'home',    moduleId: 'pages/home',    title: 'Home' },\n      { route: 'account',    name: 'account', moduleId: 'pages/account', title:'Account' },\n      { route: 'login',      name: 'login',   moduleId: 'pages/login',   title:'Login', anomymous: true }\n    ]);\n\n    this.router = router;\n  }\n\n  private loadUser() {\n    this.settings.userName = sessionStorage.getItem('userName');\n  }\n}\n\n@autoinject\nclass AuthorizeStep {\n\n  constructor(private settings: Settings) { }\n\n  run(navigationInstruction: NavigationInstruction, next: Next): Promise<any> {\n    if (navigationInstruction.getAllInstructions().some(i => {\n        let route = i.config as CustomRouteConfig;\n        return !route.anomymous\n      })) \n    {\n        var isLoggedIn = this.settings.userName;\n        if (!isLoggedIn) {\n          return next.cancel(new Redirect('login'));\n        }\n    }\n\n    return next();\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();    \n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Attendee {\n    userId: string;\n    name: string;\n}","export class Message {\n    conversationId: string;\n    from: string;\n    text: string;\n    date: Date;\n}","import { Attendee } from './attendee';\nimport { Message } from './message';\n\nexport class Conversation {\n    id: string;\n    title: string;\n    attendees: Attendee[];\n    messages: Message[]\n}","import { Conversation } from './conversation';\n\nexport class User {\n    id: string;\n    name: string;\n    conversation: Conversation;\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationJoined {\n    constructor(conversation: Conversation) { }\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationSelected {\n    constructor(conversation: Conversation) { }\n}","import { Message } from '../model/message';\n\nexport class MessageReceived {\n    constructor(message: Message) { }\n}","import { User } from '../model/user';\n\nexport class UserConnected {\n    constructor(user: User) { }\n}","export class UserDisconnected {\n    constructor(id: string) { }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\nimport environment from '../environment';\n\nimport { Settings } from '../config/settings';\nimport { User } from '../model/user';\nimport { Message } from '../model/message';\nimport { Conversation } from '../model/conversation';\nimport { Attendee } from '../model/attendee';\n\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\nimport { ConversationJoined } from '../events/conversationJoined';\nimport { ConversationSelected } from '../events/conversationSelected';\nimport { MessageReceived } from '../events/messageReceived';\nimport { UserConnected } from '../events/userConnected';\nimport { UserDisconnected } from '../events/userDisconnected';\n\ninterface ChatSignalR extends SignalR {\n    chat: ChatProxy\n}\n\ninterface ChatProxy {\n    client: ChatClient\n}\n\ninterface ChatClient {\n    userConnected: (user: User) => void;\n    userDisconnected: (id: string) => void;\n    messageReceived: (message: Message) => void;\n    joinConversation: (conversation: Conversation) => void;\n}\n\nexport enum ConnectionState {  \n    Connected = 1,\n    Disconnected = 2,\n    Error = 3\n}\n\n@autoinject\nexport class ChatService {\n\n    currentState = ConnectionState.Disconnected;\n\n    constructor(private settings: Settings, private ea: EventAggregator, private http: HttpClient) {\n        http.configure(\n            builder => builder\n                .withBaseUrl(settings.apiBaseUrl)\n                .withCredentials(true));\n    }\n    \n    start() {\n        let debug = environment.debug;\n        // only for debug\n        jQuery.connection.hub.logging = debug;\n        // get the signalR hub named 'chat'\n        let connection = <ChatSignalR>jQuery.connection;\n        let chatHub = connection.chat;\n        \n        /**\n          * @desc callback when a new user connect to the chat\n          * @param User user, the connected user\n        */\n        chatHub.client.userConnected = user => this.onUserConnected(user);\n        /**\n          * @desc callback when a new user disconnect the chat\n          * @param id, the disconnected user id\n        */\n        chatHub.client.userDisconnected = id => this.onUserDisconnected(id);\n        /**\n          * @desc callback when a message is received\n          * @param String to, the conversation id\n          * @param Message data, the message\n        */\n        chatHub.client.messageReceived = message => this.onMessageReceived(message);\n        /**\n          * @desc callback when a new conversation is create on server\n          * @param Conv data, the conversation model\n        */\n        chatHub.client.joinConversation = conversation => this.onJoinConversation(conversation);\n\n        if (debug) {\n            // for debug only, callback on connection state change\n            jQuery.connection.hub.stateChanged(change => {\n                let oldState: string,\n                    newState: string;\n\n                for (var state in jQuery.signalR.connectionState) {\n                    if (jQuery.signalR.connectionState[state] === change.oldState) {\n                        oldState = state;\n                    }\n                    if (jQuery.signalR.connectionState[state] === change.newState) {\n                        newState = state;\n                    }\n                }\n\n                console.log(\"Chat Hub state changed from \" + oldState + \" to \" + newState);\n            });                        \n        }\n\n        // callback on connection reconnect\n        jQuery.connection.hub.reconnected(() => this.onReconnected());\n        // callback on connection error\n        jQuery.connection.hub.error(error => this.onError(error) );\n        // callback on connection disconnect\n        jQuery.connection.hub.disconnected(() => this.onDisconnected());\n    \n        // start the connection\n        jQuery.connection.hub.start()\n            .done(response => this.setConnectionState(ConnectionState.Connected))\n            .fail(error => this.setConnectionState(ConnectionState.Error));\n    }\n\n    showConversation(conversation: Conversation) {\n        this.ea.publish(new ConversationJoined(conversation));        \n    }\n\n    sendMessage(conversation: Conversation, message: string): Promise<Message> {\n        let m = new Message();\n        m.conversationId = conversation.id;\n        m.from = this.settings.userName;\n        m.text = message;\n\n        if (conversation.id) {\n            return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.chatAPI, {\n                    to: conversation.id,\n                    text: message\n                })\n                .then(response => resolve(m))\n                .catch(error => reject(error));\n            });\n        } else {\n            let attendee: Attendee;\n             conversation.attendees.forEach(a => {\n                 if (a.userId !== this.settings.userName) {\n                     attendee = a;\n                 }\n             });\n\n             return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.convAPI, {\n                    to: attendee.userId,\n                    text: message\n                })\n                .then(\n                    response => {\n                        conversation.id = response.content;\n                        this.ea.publish(new ConversationJoined(conversation));\n                        resolve(m);\n                    })\n                .catch(error => reject(error));\n            });\n            \n        }\n    }\n    \n    getUsers(): Promise<User[]> {\n        return new Promise<User[]>((resolve, reject) => {\n            this.http.get(this.settings.userAPI)\n                .then(response => {\n                        var data = response.content;\n                        if (data && data.users) {\n                            resolve(data.users as User[]);\n                        }\n                    })\n                .catch(error => reject(error));\n        });\n    }\n\n    getConversations(): Promise<Conversation[]> {\n        return new Promise<Conversation[]>((resolve, reject) => {\n            this.http.get(this.settings.chatAPI)\n                .then(response => {\n                    var data = response.content;\n                    if (data) {\n                        resolve(data as Conversation[]);\n                    }\n                })\n                .catch(error => reject(error));\n        });\n    }\n\n    private setConnectionState(connectionState: ConnectionState) {\n        console.log('connection state changed to: ' + connectionState);\n        this.currentState = connectionState;\n        this.ea.publish(new ConnectionStateChanged(connectionState));\n    }\n       \n    private onReconnected() {\n        this.setConnectionState(ConnectionState.Connected);\n    }\n\n    private onDisconnected() {\n        this.setConnectionState(ConnectionState.Disconnected);\n    }\n\n    private onError(error: any) {\n        this.setConnectionState(ConnectionState.Error);\n    }\n\n    private onUserConnected(user: User) {\n        console.log(\"Chat Hub new user connected: \" + user.id);\n        this.ea.publish(new UserConnected(user));\n    }\n\n    private onUserDisconnected(id: string) {\n        console.log(\"Chat Hub user disconnected: \" + id);\n        if (id !== this.settings.userName) {\n            this.ea.publish(new UserDisconnected(id));\n        }\n    }   \n\n    private onMessageReceived(message: Message) {\n        this.ea.publish(new MessageReceived(message));\n    }\n\n    private onJoinConversation(conversation: Conversation) {\n        this.ea.publish(new ConversationJoined(conversation));\n    }\n}","import { ConnectionState } from '../services/chat.service';\n\nexport class ConnectionStateChanged {\n    constructor(state: ConnectionState) { }\n}",null,"import { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { Settings } from '../config/settings';\n\n@autoinject\nexport class Home {\n\n    constructor(public settings: Settings, private router: Router) { }\n\n    logoff() {\n        delete this.settings.userName;\n        sessionStorage.removeItem('userName');\n        this.router.navigateToRoute('login');\n    }\n\n    manage() {\n        this.router.navigateToRoute('account');\n    }\n}","import { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { Settings } from '../config/settings';\n\n@autoinject\nexport class Login {\n    userName: string;\n    errorMessage: string;\n\n    constructor(private settings: Settings, private http: HttpClient, private router: Router) {\n        http.configure(\n            builder => builder\n                .withBaseUrl(settings.apiBaseUrl)\n                .withCredentials(true));\n     }\n\n    login() {\n        this.http.get('xhrf') \n            .then(response => \n                this.http\n                    .configure(\n                        builder => builder.withHeader(\"X-XSRF-TOKEN\", response.response)\n                    )\n                    .post(this.settings.loginAPI, JSON.stringify(this.userName))\n                    .then(response => { \n                        this.settings.userName = this.userName;\n                        sessionStorage.setItem('userName', this.userName);\n                        this.router.navigateToRoute('home');\n                    })\n                    .catch(error => this.errorMessage = error))\n            .catch(error => this.errorMessage = error);\n    }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ChatService } from '../../services/chat.service';\nimport { User } from '../../model/user';\nimport { UserConnected } from '../../events/userConnected'\nimport { UserDisconnected } from '../../events/userDisconnected'\n\n@autoinject\nexport class ContactList {\n  users: User[];\n  loadingMessage = \"loading...\";\n  private userConnectedSubscription: Subscription;\n  private userDisconnectedSubscription: Subscription;\n\n  constructor(private service: ChatService, private ea: EventAggregator) { }\n\n  attached() {\n    this.service.getUsers()\n      .then(users => {\n        this.users = users;\n\n        this.userConnectedSubscription = this.ea.subscribe(UserConnected, user => {\n          this.users.unshift(user);\n        });\n\n        this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, id => {\n          let user: User;\n          this.users.forEach(u => {\n            if(u.id === id) {\n              user = u;\n            }\n          });\n          let index = this.users.indexOf(user);\n          this.users.splice(index, 1);\n        });\n      })\n      .catch(error => this.loadingMessage = error);\n    }\n\n  detached() {\n    if (this.userConnectedSubscription) {\n      this.userConnectedSubscription.dispose();\n    }\n    if (this.userDisconnectedSubscription) {\n      this.userDisconnectedSubscription.dispose();\n    }\n  }\n}","import { bindable, autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ChatService } from '../../services/chat.service';\nimport { User } from '../../model/user';\nimport { Conversation } from '../../model/conversation';\nimport { Attendee } from '../../model/attendee';\nimport { Message } from '../../model/message';\nimport { ConversationSelected } from '../../events/conversationSelected';\n\n@autoinject\nexport class Contact {\n  @bindable user: User;\n  isSelected: boolean;\n  private conversationSelectedSubscription: Subscription;\n\n  constructor(private service: ChatService, private ea: EventAggregator) { }\n\n  select() {\n    if (!this.user.conversation) {\n            let conversation = new Conversation();\n            let attendees = new Array<Attendee>();\n            let attendee = new Attendee();\n\n            attendee.userId = this.user.id;\n            attendees.push(attendee);\n            conversation.attendees = attendees;\n            conversation.messages = new Array<Message>();\n\n            this.user.conversation = conversation;\n        }\n\n        this.service.showConversation(this.user.conversation);\n  }\n\n  attached() {\n    this.conversationSelectedSubscription = this.ea.subscribe(ConversationSelected, c => {\n      let conv = c as Conversation;\n      let attendees = conv.attendees;\n\n      this.isSelected = false;\n      if (attendees.length == 2) {\n        attendees.forEach(a => {\n          if (a.userId === this.user.id) {\n            this.isSelected = true;\n          }\n        })\n      } \n    });\n  }\n\n  detached() {\n    this.conversationSelectedSubscription.dispose();\n  }\n}\n\n","import { autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ChatService } from '../../services/chat.service';\nimport { Conversation } from '../../model/conversation';\nimport { ConversationJoined } from '../../events/conversationJoined'\nimport { UserDisconnected } from '../../events/userDisconnected'\n\n@autoinject\nexport class ConversationList {\n  conversations: Conversation[];\n  private conversationJoinedSubscription: Subscription;\n  private userDisconnectedSubscription: Subscription;\n\n  constructor(private service: ChatService, private ea: EventAggregator) { }\n\n  attached() {\n    this.service.getConversations()\n      .then(conversations => {\n        this.conversations = conversations;\n\n        this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, id => {\n          this.conversations.forEach(c => {\n            let attendees = c.attendees;\n            if (attendees.length === 2) {\n              attendees.forEach(a => {\n                if (a.userId === id) {\n                  let index = this.conversations.indexOf(c);\n                  this.conversations.splice(index, 1);\n                }\n              });\n            }\n          });          \n        });\n\n        this.conversationJoinedSubscription = this.ea.subscribe(ConversationJoined, c => {\n          this.conversations.unshift(c);\n        });\n      });\n    }\n\n  detached() {\n    if (this.conversationJoinedSubscription) {\n      this.conversationJoinedSubscription.dispose();\n    }\n    if (this.userDisconnectedSubscription) {\n      this.userDisconnectedSubscription.dispose();\n    }\n  }\n}","import { bindable, autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ChatService } from '../../services/chat.service';\nimport { Conversation } from '../../model/conversation';\nimport { ConversationSelected } from '../../events/conversationSelected';\n\nexport class ConversationPreview {\n  @bindable conversation: Conversation;\n  isSelected: boolean;\n  private conversationSelectecSubscription: Subscription;\n\n  constructor(private service: ChatService, private ea: EventAggregator) { }\n\n  select() {\n    this.isSelected = true;\n    this.service.showConversation(this.conversation);\n  }\n\n  attached() {\n    this.ea.subscribe(ConversationSelected, c => {\n      if (c.id === this.conversation.id) {\n        this.isSelected = true;\n      } else {\n        this.isSelected = false;\n      }\n    });\n  }\n\n  detached() {\n    this.conversationSelectecSubscription.dispose();\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class Conversation {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n",null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}